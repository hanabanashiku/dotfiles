unbind C-b
if-shell 'uname | grep -q Darwin' {
     set -g prefix C-a
} {
   set -g prefix C-space
}

unbind %
unbind '"'
unbind n
unbind p

bind h split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"

bind -n M-j previous-window
bind -n M-k next-window
bind -n C-J swap-pane -D
bind -n C-K swap-pane -U

set -g default-terminal "screen-256color"
set -g history-limit 50000
set -g display-time 4000
set -g status-interval 5
set -g base-index 1
set -s set-clipboard on
set-window-option -g pane-base-index 1
set-window-option -g mode-keys vi
set-option -sg escape-time 20 # make vim better to work with

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

# Plugin settings
set -g @catppuccin_flavour 'macchiato'
set -g @continuum-restore 'on'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'ofirgall/tmux-window-name'
set -g @plugin 'catpuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

piplist='$(python3 -m pip list 2> /dev/null)'
if-shell -b '! echo "$piplist" | grep libtmux -q' \
    run-shell 'python3 -m pip install --user libtmux'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'
